nextflow_workflow {
    name "Test Subworkflow GENERATE_DOWNSTREAM_SAMPLESHEETS"
    script "../main.nf"
    workflow "GENERATE_DOWNSTREAM_SAMPLESHEETS"

    tag "subworkflows"
    tag "subworkflows_local"
    tag "subworkflows/generate_downstream_samplesheets"

    test("reads - taxprofiler,mag") {

        when {
            params {
                modules_testdata_base_path      = "https://raw.githubusercontent.com/nf-core/test-datasets/detaxizer/test_data/"
                outdir                          = "."
                generate_pipeline_samplesheets  = 'taxprofiler,mag'
            }
            workflow {
                """
                input[0] = Channel.of(
                        [
                            [id:'test_paired-end_plus_long-reads_longReads', single_end:true, long_reads:true, amount_of_files:1],
                            file(params.modules_testdata_base_path + 'subset350.fq.gz',checkIfExists: true)
                        ],
                        [
                            [id:'test_paired-end_plus_long-reads', single_end:false, long_reads:false, amount_of_files:2],
                            [
                                file(params.modules_testdata_base_path + 'test_minigut_sample2_hg38host_R1.fastq.gz',checkIfExists: true),
                                file(params.modules_testdata_base_path + 'test_minigut_sample2_hg38host_R2.fastq.gz',checkIfExists: true)
                            ]
                        ],
                        [
                            [id:'test_single-end_long_longReads', single_end:true, long_reads:true, amount_of_files:1],
                            file(params.modules_testdata_base_path + 'subset350.fq.gz',checkIfExists: true)
                        ],
                        [
                            [id:'test_single-end_short', single_end:true, long_reads:false, amount_of_files:1],
                            file(params.modules_testdata_base_path + 'test_minigut_sample2_hg38host_R1.fastq.gz',checkIfExists: true)
                        ],
                        [
                            [id:'test_paired-end', single_end:false, long_reads:false, amount_of_files:2],
                            [
                                file(params.modules_testdata_base_path + 'test_minigut_sample2_hg38host_R1.fastq.gz',checkIfExists: true),
                                file(params.modules_testdata_base_path + 'test_minigut_sample2_hg38host_R2.fastq.gz',checkIfExists: true)
                            ]
                        ]
                )
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    [
                        "${params.outdir}/downstream_samplesheets/taxprofiler.csv",
                        "${params.outdir}/downstream_samplesheets/mag-pe.csv",
                        "${params.outdir}/downstream_samplesheets/mag-se.csv"
                    ]).match()
                },
            )
        }
    }
}
