/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        enabled: false
    ]

    withName: FASTP {
        ext.args = [
            "-q ${params.fastp_qualified_quality}",
            "--cut_front",
            "--cut_tail",
            "--cut_mean_quality ${params.fastp_cut_mean_quality}",
            "--length_required ${params.reads_minlength}",
            params.fastp_eval_duplication ? "" : "--dont_eval_duplication"
        ].join(' ').trim()
        publishDir = [
            [
                path: { "${params.outdir}/fastp/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.{html,json}",
                enabled: params.save_intermediates
            ],
            [
                path: { "${params.outdir}/fastp/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.fastq.gz",
                enabled: params.save_clipped_reads
            ]
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
                path: { "${params.outdir}/FastQC/${meta.id}" },
                mode: params.publish_dir_mode,
                pattern: "*.html",
                enabled: params.save_intermediates
            ]
    }

    withName: BBMAP_BBDUK {
        ext.args = ["ordered=t",
            "k=${params.bbduk_kmers}"
            ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/bbduk/" },
            mode: params.publish_dir_mode,
            pattern: '*.log',
            enabled: params.save_intermediates
        ]
    }

    withName: ISOLATE_BBDUK_IDS {
        publishDir = [
            path: { "${params.outdir}/bbduk/ids" },
            mode: params.publish_dir_mode,
            pattern: '*.bbduk.txt',
            enabled: params.save_intermediates
        ]
    }

    withName: KRAKEN2_KRAKEN2 {
        ext.args = ["--use-names",
            "--confidence ${params.kraken2confidence}",
            "--report-zero-counts"
            ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/kraken2" },
            mode: params.publish_dir_mode,
            pattern: '*kraken2*',
            enabled: params.save_intermediates
        ]
    }

    withName: KRAKEN2_POST_CLASSIFICATION_FILTERED {
        ext.args = ["--use-names",
            "--confidence ${params.kraken2confidence_filtered}",
            "--report-zero-counts"
            ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/kraken2/filtered" },
            mode: params.publish_dir_mode,
            pattern: '*kraken2*',
            enabled: true
        ]
    }

    withName: KRAKEN2_POST_CLASSIFICATION_REMOVED {
        ext.args = ["--use-names",
            "--confidence ${params.kraken2confidence_removed}",
            "--report-zero-counts"
            ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/kraken2/removed" },
            mode: params.publish_dir_mode,
            pattern: '*kraken2*',
            enabled: true
        ]
        }

    withName: PARSE_KRAKEN2REPORT {
        publishDir = [
            path: { "${params.outdir}/kraken2/taxonomy" },
            mode: params.publish_dir_mode,
            pattern: '*.{json,txt}',
            enabled: params.save_intermediates
        ]
    }

    withName: ISOLATE_KRAKEN2_IDS {
        publishDir = [
            path: { "${params.outdir}/kraken2/isolated" },
            mode: params.publish_dir_mode,
            pattern: '*{classified.txt,ids.txt}',
            enabled: params.save_intermediates
        ]

    }

    withName: MERGE_IDS {
        publishDir = [
            path: { "${params.outdir}/classification/ids" },
            mode: params.publish_dir_mode,
            pattern: '*ids.txt',
            enabled: params.save_intermediates
        ]

    }
    withName: BLAST_MAKEBLASTDB {
        ext.args = '-dbtype "nucl"'
    }

    withName: BLAST_BLASTN {
        ext.args = ["-max_target_seqs 1 -max_hsps 1 -evalue ${params.blast_evalue} -outfmt \"6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore qcovs qcovhsp\""].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/blast" },
            mode: params.publish_dir_mode,
            pattern: '*blastn.txt',
            enabled: params.save_intermediates
        ]
    }

    withName: FILTER_BLASTN_IDENTCOV {
        publishDir = [
            path: { "${params.outdir}/blast/filtered_ident_cov" },
            mode: params.publish_dir_mode,
            pattern: '*identcov.txt',
            enabled: params.save_intermediates
        ]
    }

    withName: RENAME_FASTQ_HEADERS_AFTER {
        publishDir = [[
            path: { "${params.outdir}/filter/filtered" },
            mode: params.publish_dir_mode,
            pattern: '*filtered.fastq.gz',
            enabled: true
        ],
        [
            path: { "${params.outdir}/filter/removed" },
            mode: params.publish_dir_mode,
            pattern: '*removed.fastq.gz',
            enabled: params.output_removed_reads
        ]]
    }

    withName: SUMMARY_CLASSIFICATION {
        publishDir = [
            path: { "${params.outdir}/classification/summary" },
            mode: params.publish_dir_mode,
            pattern: '*.classification_summary.tsv',
            enabled: params.save_intermediates
        ]
    }

    withName: SUMMARY_BLASTN {
        publishDir = [
            path: { "${params.outdir}/blast/summary" },
            mode: params.publish_dir_mode,
            pattern: '*.blastn_summary.tsv',
            enabled: params.save_intermediates
        ]
    }

    withName: SUMMARIZER {
        publishDir = [
            path: { "${params.outdir}/summary" },
            mode: params.publish_dir_mode,
            pattern: 'summary.tsv',
            enabled: true
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
